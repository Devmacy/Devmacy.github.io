{"title":"Text to Sticky Notes","uid":"57f6881fb5562e51f74a8f79e9f7cd82","slug":"Text to Sticky Notes","date":"2023-07-29T10:00:19.320Z","updated":"2023-07-29T10:00:19.425Z","comments":true,"path":"api/articles/Text to Sticky Notes.json","keywords":"Digital Garden","cover":[],"content":"<p>&#x2F;*<br><img src=\"https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-sticky-note-matrix.jpg\"></p>\n<p>Converts selected plain text element to sticky notes by dividing the text element line by line into separate sticky notes. The color of the stikcy note as well as the arrangement of the grid can be configured in plugin settings.</p>\n<pre><code class=\"javascript\">*/\nif(!ea.verifyMinimumPluginVersion || !ea.verifyMinimumPluginVersion(&quot;1.5.21&quot;)) &#123;\n  new Notice(&quot;This script requires a newer version of Excalidraw. Please install the latest version.&quot;);\n  return;\n&#125;\nlet settings = ea.getScriptSettings();\n//set default values on first run\nif(!settings[&quot;Border color&quot;]) &#123;\n    settings = &#123;\n      &quot;Border color&quot; : &#123;\n            value: &quot;black&quot;,\n      description: &quot;Any legal HTML color (#000000, rgb, color-name, etc.). Set to &#39;transparent&#39; for transparent color.&quot;\n        &#125;,\n        &quot;Background color&quot; : &#123;\n            value: &quot;gold&quot;,\n      description: &quot;Background color of the sticky note. Set to &#39;transparent&#39; for transparent color.&quot;\n        &#125;,\n        &quot;Background fill style&quot; : &#123;\n            value: &quot;solid&quot;,\n      description: &quot;Fill style of the sticky note&quot;,\n          valueset: [&quot;hachure&quot;,&quot;cross-hatch&quot;,&quot;solid&quot;]\n        &#125;\n    &#125;;\n    await ea.setScriptSettings(settings);\n&#125;\n\nif(!settings[&quot;Max sticky note width&quot;]) &#123;\n  settings[&quot;Max sticky note width&quot;] = &#123;\n    value: &quot;600&quot;,\n    description: &quot;Maximum width of new sticky note. If text is longer, it will be wrapped&quot;,\n      valueset: [&quot;400&quot;,&quot;600&quot;,&quot;800&quot;,&quot;1000&quot;,&quot;1200&quot;,&quot;1400&quot;,&quot;2000&quot;]\n  &#125;\n  await ea.setScriptSettings(settings);\n&#125;\n\nif(!settings[&quot;Sticky note width&quot;]) &#123;\n  settings[&quot;Sticky note width&quot;] = &#123;\n    value: &quot;100&quot;,\n    description: &quot;Preferred width of the sticky note. Set to 0 if unset.&quot;,\n  &#125;\n  settings[&quot;Sticky note height&quot;] = &#123;\n    value: &quot;120&quot;,\n    description: &quot;Preferred height of the sticky note. Set to 0 if unset.&quot;,\n  &#125;\n  settings[&quot;Rows per column&quot;] = &#123;\n    value: &quot;3&quot;,\n    description: &quot;If multiple text elements are converted to sticky notes in one step, how many rows before a next column is created. Only effective if fixed width &amp; height are given. 0 for unset.&quot;,\n  &#125;\n  settings[&quot;Gap&quot;] = &#123;\n    value: &quot;10&quot;,\n    description: &quot;Gap between rows and columns&quot;,\n  &#125;\n  await ea.setScriptSettings(settings);\n&#125;\n\nconst pref_width = parseInt(settings[&quot;Sticky note width&quot;].value);\nconst pref_height = parseInt(settings[&quot;Sticky note height&quot;].value);\nconst pref_rows = parseInt(settings[&quot;Rows per column&quot;].value);\nconst pref_gap = parseInt(settings[&quot;Gap&quot;].value);\n\nconst maxWidth = parseInt(settings[&quot;Max sticky note width&quot;].value);\nconst strokeColor = settings[&quot;Border color&quot;].value;\nconst backgroundColor = settings[&quot;Background color&quot;].value;\nconst fillStyle = settings[&quot;Background fill style&quot;].value;\n\nelements = ea.getViewSelectedElements().filter((el)=&gt;el.type===&quot;text&quot;);\nelements.forEach((el)=&gt;&#123;\n  ea.style.strokeColor = el.strokeColor;\n  ea.style.fontFamily  = el.fontFamily;\n  ea.style.fontSize    = el.fontSize;\n  const text = el.text.split(&quot;\\n&quot;);\n  for(i=0;i&lt;text.length;i++) &#123;\n      ea.addText(el.x,el.y+i*el.height/text.length,text[i].trim());\n  &#125;\n&#125;);\nea.deleteViewElements(elements);\n\nea.style.strokeColor = strokeColor;\nea.style.backgroundColor = backgroundColor;\nea.style.fillStyle = fillStyle;\nconst padding = 6;\nconst boxes = [];\n\nconst doMatrix = pref_width &gt; 0 &amp;&amp; pref_height &gt; 0 &amp;&amp; pref_rows &gt; 0 &amp;&amp; pref_gap &gt; 0;\nlet row = 0;\nlet col = doMatrix ? -1 : 0;\n\nea.getElements().forEach((el, idx)=&gt;&#123;\n  if(doMatrix) &#123;\n        if(idx % pref_rows === 0) &#123;\n            row=0;\n            col++;\n        &#125; else &#123;\n            row++;\n        &#125;\n    &#125;\n  const width = pref_width &gt; 0 ? pref_width : el.width+2*padding;\n  const widthOK = pref_width &gt; 0 || width&lt;=maxWidth;\n  const id = ea.addRect(\n    (doMatrix?col*pref_width+col*pref_gap:0)+el.x-padding,\n    (doMatrix?row*pref_height+row*pref_gap:0),\n    widthOK?width:maxWidth,pref_height &gt; 0 ? pref_height : el.height+2*padding\n  );\n  boxes.push(id);\n  ea.getElement(id).boundElements=[&#123;type:&quot;text&quot;,id:el.id&#125;];\n  el.containerId = id;\n&#125;);\n\nconst els = Object.entries(ea.elementsDict);\nlet newEls = [];\nfor(i=0;i&lt;els.length/2;i++) &#123;\n    newEls.push(els[els.length/2+i]);\n    newEls.push(els[i])\n&#125;\nea.elementsDict = Object.fromEntries(newEls);\n\nawait ea.addElementsToView(false,true);\nconst containers = ea.getViewElements().filter(el=&gt;boxes.includes(el.id));\nea.getExcalidrawAPI().updateContainerSize(containers);\nea.selectElementsInView(containers);\n</code></pre>\n","feature":true,"text":"&#x2F;* Converts selected plain text element to sticky notes by dividing the text element line by line into separate sticky notes. The color...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Uniform size","uid":"bd0d208203deb7eab85851c1be6fe6ef","slug":"Uniform size","date":"2023-07-29T10:00:19.322Z","updated":"2023-07-29T10:00:19.432Z","comments":true,"path":"api/articles/Uniform size.json","keywords":"Digital Garden","cover":[],"text":"&#x2F;* The script will standardize the sizes of rectangles, diamonds and ellipses adjusting all the elements to match the largest width and...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Text Arch","uid":"b8b3f7ebb395b48818bfda76a53e2384","slug":"Text Arch","date":"2023-07-29T10:00:19.317Z","updated":"2023-07-29T10:00:19.424Z","comments":true,"path":"api/articles/Text Arch.json","keywords":"Digital Garden","cover":[],"text":"&#x2F;* Fit a text to the arch of a circle. The script will prompt you for the radius of the circle and then split your text to individual l...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}