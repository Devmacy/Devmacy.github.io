{"title":"Elbow connectors","uid":"13ea30ebd17055cb9b81ab0b3e2c7a26","slug":"Elbow connectors","date":"2023-07-29T10:00:19.233Z","updated":"2023-07-29T10:00:19.357Z","comments":true,"path":"api/articles/Elbow connectors.json","keywords":"Digital Garden","cover":[],"content":"<p>&#x2F;*</p>\n<p><img src=\"https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-download-raw.jpg\"></p>\n<p>Download this file and save to your Obsidian Vault including the first line, or open it in “Raw” and copy the entire contents to Obsidian.</p>\n<p><img src=\"https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/elbow-connectors.png\"></p>\n<p>This script converts the selected connectors to elbows.</p>\n<p>See documentation for more details:<br><a href=\"https://zsviczian.github.io/obsidian-excalidraw-plugin/ExcalidrawScriptsEngine.html\">https://zsviczian.github.io/obsidian-excalidraw-plugin/ExcalidrawScriptsEngine.html</a></p>\n<pre><code class=\"javascript\">*/\nconst selectedCenterConnectPoints = await utils.suggester(\n    [&#39;Yes&#39;, &#39;No&#39;],\n    [true, false],\n    &quot;Center connect points?&quot;\n  );\nconst centerConnectPoints = selectedCenterConnectPoints??false;\n\nconst allElements = ea.getViewElements();\nconst elements = ea.getViewSelectedElements();\n\nconst lines = elements.filter((el)=&gt;el.type===&quot;arrow&quot; || el.type===&quot;line&quot;);\n\nfor (const line of lines) &#123;\n  if (line.points.length &gt;= 3) &#123;\n    if(centerConnectPoints) &#123;\n      const startBindingEl = allElements.filter(el =&gt; el.id === (line.startBinding||&#123;&#125;).elementId)[0];\n        const endBindingEl = allElements.filter(el =&gt; el.id === (line.endBinding||&#123;&#125;).elementId)[0];\n\n      if(startBindingEl) &#123;\n        const startPointX = line.x +line.points[0][0];\n        if(startPointX &gt;= startBindingEl.x &amp;&amp; startPointX &lt;= startBindingEl.x + startBindingEl.width) &#123;\n          line.points[0][0] = startBindingEl.x + startBindingEl.width / 2 - line.x;\n        &#125;\n\n        const startPointY = line.y +line.points[0][1];\n        if(startPointY &gt;= startBindingEl.y &amp;&amp; startPointY &lt;= startBindingEl.y + startBindingEl.height) &#123;\n          line.points[0][1] = startBindingEl.y + startBindingEl.height / 2 - line.y;\n        &#125;\n      &#125;\n\n      if(endBindingEl) &#123;\n        const startPointX = line.x +line.points[line.points.length-1][0];\n        if(startPointX &gt;= endBindingEl.x &amp;&amp; startPointX &lt;= endBindingEl.x + endBindingEl.width) &#123;\n          line.points[line.points.length-1][0] = endBindingEl.x + endBindingEl.width / 2 - line.x;\n        &#125;\n\n        const startPointY = line.y +line.points[line.points.length-1][1];\n        if(startPointY &gt;= endBindingEl.y &amp;&amp; startPointY &lt;= endBindingEl.y + endBindingEl.height) &#123;\n          line.points[line.points.length-1][1] = endBindingEl.y + endBindingEl.height / 2 - line.y;\n        &#125;\n      &#125;\n    &#125;\n    \n    for (var i = 0; i &lt; line.points.length - 2; i++) &#123;\n      var p1;\n      var p3;\n      if (line.points[i][0] &lt; line.points[i + 2][0]) &#123;\n        p1 = line.points[i];\n        p3 = line.points[i+2];\n      &#125; else &#123;\n        p1 = line.points[i + 2];\n        p3 = line.points[i];\n      &#125;\n      const p2 = line.points[i + 1];\n\n      if (p1[0] === p3[0]) &#123;\n        continue;\n      &#125;\n\n      const k = (p3[1] - p1[1]) / (p3[0] - p1[0]);\n      const b = p1[1] - k * p1[0];\n\n      y0 = k * p2[0] + b;\n      const up = p2[1] &lt; y0;\n\n      if ((k &gt; 0 &amp;&amp; !up) || (k &lt; 0 &amp;&amp; up)) &#123;\n        p2[0] = p1[0];\n        p2[1] = p3[1];\n      &#125; else &#123;\n        p2[0] = p3[0];\n        p2[1] = p1[1];\n      &#125;\n    &#125;\n  &#125;\n&#125;\n\nea.copyViewElementsToEAforEditing(lines);\nawait ea.addElementsToView(false,false);\n</code></pre>\n","text":"&#x2F;* Download this file and save to your Obsidian Vault including the first line, or open it in “Raw” and copy the entire contents to Obs...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Ellipse Selected Elements","uid":"a181e17af2228b7c5da994f8052e8e2d","slug":"Ellipse Selected Elements","date":"2023-07-29T10:00:19.235Z","updated":"2023-07-29T10:00:19.358Z","comments":true,"path":"api/articles/Ellipse Selected Elements.json","keywords":"Digital Garden","cover":[],"text":"&#x2F;* This script will add an encapsulating ellipse around the currently selected elements in Excalidraw. See documentation for more detai...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Deconstruct selected elements into new drawing","uid":"bfb83d2abca559002f1f33b5507b19ba","slug":"Deconstruct selected elements into new drawing","date":"2023-07-29T10:00:19.231Z","updated":"2023-07-29T10:00:19.354Z","comments":true,"path":"api/articles/Deconstruct selected elements into new drawing.json","keywords":"Digital Garden","cover":[],"text":"&#x2F;* Select some elements in the scene. The script will take these elements and move them into a new Excalidraw file, and open that file....","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}