{"title":"Vue3 异步加载组件","uid":"afe50561fe4a5c77cfc0770647e83e31","slug":"Vue3 异步加载组件","date":"2023-07-29T10:00:19.108Z","updated":"2023-07-29T10:11:28.948Z","comments":true,"path":"api/articles/Vue3 异步加载组件.json","keywords":"Digital Garden","cover":null,"content":"<p>#Vue  </p>\n<p>使用 dynamic import（动态导入）来异步加载组件</p>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 导入</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineAsyncComponent <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 定义组件</span>\n<span class=\"token keyword\">const</span> componentA <span class=\"token operator\">=</span> <span class=\"token function\">defineAsyncComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./path/componentA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 在模板或其他地方使用异步组件</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>AsyncComponent <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在其他地方使用组件的时候，vue 自动下载和加载组件</p>\n<h1 id=\"异步加载对-SEO-的影响\"><a href=\"#异步加载对-SEO-的影响\" class=\"headerlink\" title=\"异步加载对 SEO 的影响\"></a>异步加载对 SEO 的影响</h1><p>搜索引擎爬虫需要能够访问到完整的页面内容。由于异步加载组件在初始渲染时可能不会包含完整的组件代码，这可能导致搜索引擎无法正确解析和索引你的网页。</p>\n<h2 id=\"Vue3-处理异步组件对-SEO-的影响\"><a href=\"#Vue3-处理异步组件对-SEO-的影响\" class=\"headerlink\" title=\"Vue3 处理异步组件对 SEO 的影响\"></a>Vue3 处理异步组件对 SEO 的影响</h2><ul>\n<li><strong>预渲染（Prerendering）</strong>: 在构建过程中，使用工具如 <code>@vue/cli 或 prerender-spa-plugin</code> 将应用程序预先生成为静态 HTML 文件。这样可以确保所有内容都被渲染并可供搜索引擎爬虫访问。当用户访问该页面时，浏览器将下载并执行与动态部分交互所需的 JavaScript 代码。</li>\n<li><strong>服务端渲染（Server-side Rendering, SSR）</strong>: 如果你正在使用 Vue 3 进行服务器端渲染 (SSR)，则不必担心异步加载对 SEO 的影响。在 SSR 环境中，所有组件都会在服务器上进行完全渲染，并且最终返回给客户端一个已经包含了所有内容的 HTML 文档。</li>\n</ul>\n","feature":true,"text":"#Vue 使用 dynamic import（动态导入）来异步加载组件 用法// 导入 import &#123; defineAsyncComponent &#125; from 'vue'; // 定义组件 const componentA = defineAsyncComp...","link":"","photos":[],"count_time":{"symbolsCount":715,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Vue","slug":"Vue","count":6,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">用法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E5%AF%B9-SEO-%E7%9A%84%E5%BD%B1%E5%93%8D\"><span class=\"toc-text\">异步加载对 SEO 的影响</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Vue3-%E5%A4%84%E7%90%86%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6%E5%AF%B9-SEO-%E7%9A%84%E5%BD%B1%E5%93%8D\"><span class=\"toc-text\">Vue3 处理异步组件对 SEO 的影响</span></a></li></ol></li></ol>","author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"全屏布局","uid":"f5e5bbca00637a6a93950ae37f470129","slug":"全屏布局","date":"2023-07-29T10:00:19.123Z","updated":"2023-07-29T10:11:28.954Z","comments":true,"path":"api/articles/全屏布局.json","keywords":"Digital Garden","cover":null,"text":"#HTML实现一个全屏布局 &lt;!DOCTYPE html> &lt;html> &lt;head> &lt;title>全屏布局示例&lt;/title> &lt;style> /* 设置html和body元素的高度和边距为0，确保内容铺满整个屏幕 */ html, bod...","link":"","photos":[],"count_time":{"symbolsCount":532,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"HTML","slug":"HTML","count":16,"path":"api/tags/HTML.json"}],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Tailwind CSS","uid":"36411759ccbfccce1a6816dc4b2c5374","slug":"Tailwind CSS","date":"2023-07-29T10:00:19.081Z","updated":"2023-07-29T10:11:28.939Z","comments":true,"path":"api/articles/Tailwind CSS.json","keywords":"Digital Garden","cover":null,"text":"#CSS Tailwind CSS 的工作原理是扫描所有 HTML 文件、JavaScript 组件以及任何 模板中的 CSS 类（class）名，然后生成相应的样式代码并写入 到一个静态 CSS 文件中。 介绍Tailwind CSS 通过使用类名来快速创建样式，不需要再为各种...","link":"","photos":[],"count_time":{"symbolsCount":372,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"CSS","slug":"CSS","count":25,"path":"api/tags/CSS.json"}],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}