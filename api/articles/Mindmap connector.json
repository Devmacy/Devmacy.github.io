{"title":"Mindmap connector","uid":"5e921ced045f3ba1eac86cf604483afc","slug":"Mindmap connector","date":"2023-07-29T10:00:19.271Z","updated":"2023-07-29T10:00:19.390Z","comments":true,"path":"api/articles/Mindmap connector.json","keywords":"Digital Garden","cover":[],"content":"<p>&#x2F;*</p>\n<p><img src=\"https://github.com/xllowl/obsidian-excalidraw-plugin/blob/master/images/mindmap%20connector.png\"></p>\n<p><img src=\"https://github.com/xllowl/obsidian-excalidraw-plugin/blob/master/images/Mindmap%20connector1.png\"><br>This script creates mindmap like lines(only right and down side are available). The line will starts according to the creation time of the elements. So you may need to create the header element first.</p>\n<pre><code class=\"javascript\">*/\nconst elements = ea.getViewSelectedElements();\nea.copyViewElementsToEAforEditing(elements);\ngroups = ea.getMaximumGroups(elements);\n\nels=[];\nelsx=[];\nelsy=[];\nfor (i = 0, len =groups.length; i &lt; len; i++) &#123;\n  els.push(ea.getLargestElement(groups[i]));\n  elsx.push(ea.getLargestElement(groups[i]).x);\n  elsy.push(ea.getLargestElement(groups[i]).y);\n&#125;\n//line style setting\nea.style.strokeColor = els[0].strokeColor;\nea.style.strokeWidth = els[0].strokeWidth;\nea.style.strokeStyle = els[0].strokeStyle;\nea.style.strokeSharpness = els[0].strokeSharpness;\n//all min max x y\nlet maxy = Math.max.apply(null, elsy);\nlet indexmaxy=elsy.indexOf(maxy);\nlet miny = Math.min.apply(null, elsy);\nlet indexminy = elsy.indexOf(miny);\nlet maxx = Math.max.apply(null, elsx);\nlet indexmaxx = elsx.indexOf(maxx);\nlet minx = Math.min.apply(null, elsx);\nlet indexminx = elsx.indexOf(minx);\n//child max min x y\nlet gmaxy = Math.max.apply(null, elsy.slice(1));\nlet gindexmaxy=elsy.indexOf(gmaxy);\nlet gminy = Math.min.apply(null, elsy.slice(1));\nlet gindexminy = elsy.indexOf(gminy);\nlet gmaxx = Math.max.apply(null, elsx.slice(1));\nlet gindexmaxx = elsx.indexOf(gmaxx);\nlet gminx = Math.min.apply(null, elsx.slice(1));\nlet gindexminx = elsx.indexOf(gminx);\nlet s=0;//Set line direction down as default \nif (indexminx==0 &amp;&amp;  els[0].x + els[0].width&lt;=gminx) &#123;\n  s=1; \n&#125;\nelse if (indexminy == 0) &#123;\n  s=0;\n&#125;\nvar length_left;\nif(els[0].x + els[0].width * 2&lt;=gminx)&#123;length_left=els[0].x + els[0].width * 1.5;&#125;\nelse &#123;length_left=(els[0].x + els[0].width+gminx)/2;&#125;\n\nvar length_down;\nif(els[0].y + els[0].height* 2.5&lt;=gminy)&#123;length_down=els[0].y + els[0].height * 2;&#125;\nelse &#123;length_down=(els[0].y + els[0].height+gminy)/2;&#125;\nif(s) &#123;\n  ea.addLine(\n    [[length_left,\n    maxy + els[indexmaxy].height / 2],\n    [length_left,\n    miny + els[indexminy].height / 2]]\n  );\n  for (i = 1, len = groups.length; i &lt; len; i++) &#123;\n    ea.addLine(\n      [[els[i].x,\n      els[i].y + els[i].height/2],\n      [length_left,\n      els[i].y + els[i].height/2]]\n    );\n  &#125;\n  ea.addArrow(\n    [[els[0].x+els[0].width,\n    els[0].y + els[0].height / 2],\n    [length_left,\n    els[0].y + els[0].height / 2]],\n    &#123;\n      startArrowHead: &quot;none&quot;,\n      endArrowHead: &quot;dot&quot;\n    &#125;\n  )\n&#125;\n\nelse &#123;\n  ea.addLine(\n    [[maxx + els[indexmaxx].width / 2,\n    length_down],\n    [minx + els[indexminx].width / 2,\n    length_down]]\n  );\n  for (i = 1, len = groups.length; i &lt; len; i++) &#123;\n    ea.addLine(\n      [[els[i].x + els[i].width / 2,\n      els[i].y],\n      [els[i].x + els[i].width / 2,\n      length_down]]\n    );\n  &#125;\n  ea.addArrow(\n    [[els[0].x + els[0].width / 2,\n    els[0].y + els[0].height],\n    [els[0].x + els[0].width / 2,\n    length_down]],\n    &#123;\n      startArrowHead: &quot;none&quot;,\n      endArrowHead: &quot;dot&quot;\n    &#125;\n  );\n&#125;\n\nawait ea.addElementsToView(false,false,true);\n</code></pre>\n","text":"&#x2F;* This script creates mindmap like lines(only right and down side are available). The line will starts according to the creation time ...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Mindmap format","uid":"a270c09cac3c70483286bc10905557fc","slug":"Mindmap format","date":"2023-07-29T10:00:19.273Z","updated":"2023-07-29T10:00:19.392Z","comments":true,"path":"api/articles/Mindmap format.json","keywords":"Digital Garden","cover":[],"text":"&#x2F;* format the left to right mind map treeMind map is actually a tree, so you must have a root node. The script will determine the leftm...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[],"tags":[],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lighten background color","uid":"61e0f09d98ca2d807aab8a4dcb946f8a","slug":"Lighten background color","date":"2023-07-29T10:00:19.268Z","updated":"2023-07-29T10:00:19.383Z","comments":true,"path":"api/articles/Lighten background color.json","keywords":"Digital Garden","cover":[],"text":"&#x2F;* Download this file and save to your Obsidian Vault including the first line, or open it in “Raw” and copy the entire contents to Obs...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Devmacy","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/01/24/pSYhwB4.jpg","link":"/","description":"数字花园","socials":{"github":"https://github.com/Devmacy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}